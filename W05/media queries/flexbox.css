.container{
    background-color: lightcoral;
    height: 300px;
    display: flex;
    flex-direction: row;
    /* we discussed about 4 types of flex directions - column , column-reverse,row, row-reverse */
    flex-wrap: nowrap;
    /* wrap means width of items remains unaffected in case of small width */
    justify-content: space-between;
    /* difference between space-between and space-center */
    /* the end elements(screen ke extreme left aur right me) 
    are stuck to the end in case of space-between */

    /* flex-end ,center,space-around,space-center */
    align-items: center; 
    /* align-items is how the content inside the .container class elemennts is shown VERTICALLY*/
    /* it has same properties as justify content */
    align-content: center;
    
    /* Justify-content is for Alignment & Spacing along primary axis (X-axis)
    align-items is for Alignment only along secondary axis (Y-axis) */
}

.item{
    background-color: lightblue;
    margin: 30px;
    height: 60px;
    width: 60px;
    padding: 10px;
    font-size: 30px;
}

/* Initially every element has order 0 , if order is less than 0 then that element comes at the start 
and if order is more than 0 than the element goes at the end */

#item11{
    order: 1;
    flex-grow: 5; /* it means item11 will grow in size to fill up the empty space on page */
}

#item13{
    order:-1;
    align-self: flex-start;
    flex-grow: 1; /* it means item11 will grow in size to fill up the empty space on page */
}